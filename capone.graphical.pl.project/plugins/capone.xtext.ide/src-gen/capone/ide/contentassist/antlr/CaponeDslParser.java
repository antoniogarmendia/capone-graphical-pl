/*
 * generated by Xtext 2.32.0
 */
package capone.ide.contentassist.antlr;

import capone.ide.contentassist.antlr.internal.InternalCaponeDslParser;
import capone.services.CaponeDslGrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class CaponeDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(CaponeDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, CaponeDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getTermAccess().getAlternatives_0(), "rule__Term__Alternatives_0");
			builder.put(grammarAccess.getBinaryOperatorAccess().getAlternatives(), "rule__BinaryOperator__Alternatives");
			builder.put(grammarAccess.getModuleAccess().getGroup(), "rule__Module__Group__0");
			builder.put(grammarAccess.getModuleAccess().getGroup_4_0(), "rule__Module__Group_4_0__0");
			builder.put(grammarAccess.getModuleAccess().getGroup_4_0_0(), "rule__Module__Group_4_0_0__0");
			builder.put(grammarAccess.getModuleAccess().getGroup_4_0_1(), "rule__Module__Group_4_0_1__0");
			builder.put(grammarAccess.getModuleAccess().getGroup_4_1(), "rule__Module__Group_4_1__0");
			builder.put(grammarAccess.getModuleAccess().getGroup_4_1_2(), "rule__Module__Group_4_1_2__0");
			builder.put(grammarAccess.getModuleAccess().getGroup_4_2(), "rule__Module__Group_4_2__0");
			builder.put(grammarAccess.getModuleAccess().getGroup_4_2_2(), "rule__Module__Group_4_2_2__0");
			builder.put(grammarAccess.getModuleAccess().getGroup_4_3(), "rule__Module__Group_4_3__0");
			builder.put(grammarAccess.getModuleAccess().getGroup_4_3_2(), "rule__Module__Group_4_3_2__0");
			builder.put(grammarAccess.getModuleAccess().getGroup_4_4(), "rule__Module__Group_4_4__0");
			builder.put(grammarAccess.getModuleAccess().getGroup_4_4_2(), "rule__Module__Group_4_4_2__0");
			builder.put(grammarAccess.getModuleAccess().getGroup_4_5(), "rule__Module__Group_4_5__0");
			builder.put(grammarAccess.getModuleAccess().getGroup_4_6(), "rule__Module__Group_4_6__0");
			builder.put(grammarAccess.getRuleSetAccess().getGroup(), "rule__RuleSet__Group__0");
			builder.put(grammarAccess.getRuleSetAccess().getGroup_2(), "rule__RuleSet__Group_2__0");
			builder.put(grammarAccess.getRuleSetAccess().getGroup_2_1(), "rule__RuleSet__Group_2_1__0");
			builder.put(grammarAccess.getDiagramAccess().getGroup(), "rule__Diagram__Group__0");
			builder.put(grammarAccess.getDiagramAccess().getGroup_1(), "rule__Diagram__Group_1__0");
			builder.put(grammarAccess.getDiagramAccess().getGroup_1_1(), "rule__Diagram__Group_1_1__0");
			builder.put(grammarAccess.getDiagramAccess().getGroup_1_1_2(), "rule__Diagram__Group_1_1_2__0");
			builder.put(grammarAccess.getDiagramAccess().getGroup_1_2(), "rule__Diagram__Group_1_2__0");
			builder.put(grammarAccess.getDiagramAccess().getGroup_1_2_2(), "rule__Diagram__Group_1_2_2__0");
			builder.put(grammarAccess.getElementAccess().getGroup(), "rule__Element__Group__0");
			builder.put(grammarAccess.getElementAccess().getGroup_2(), "rule__Element__Group_2__0");
			builder.put(grammarAccess.getElementAccess().getGroup_2_2(), "rule__Element__Group_2_2__0");
			builder.put(grammarAccess.getFeatureElementAccess().getGroup(), "rule__FeatureElement__Group__0");
			builder.put(grammarAccess.getRuleAccess().getGroup(), "rule__Rule__Group__0");
			builder.put(grammarAccess.getRuleAccess().getGroup_1(), "rule__Rule__Group_1__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getTermAccess().getGroup(), "rule__Term__Group__0");
			builder.put(grammarAccess.getSimpleAccess().getGroup(), "rule__Simple__Group__0");
			builder.put(grammarAccess.getBinaryAccess().getGroup(), "rule__Binary__Group__0");
			builder.put(grammarAccess.getNextTermAccess().getGroup(), "rule__NextTerm__Group__0");
			builder.put(grammarAccess.getModuleAccess().getIsTopAssignment_0(), "rule__Module__IsTopAssignment_0");
			builder.put(grammarAccess.getModuleAccess().getNameAssignment_2(), "rule__Module__NameAssignment_2");
			builder.put(grammarAccess.getModuleAccess().getFormulaAssignment_4_0_0_1(), "rule__Module__FormulaAssignment_4_0_0_1");
			builder.put(grammarAccess.getModuleAccess().getMetamodelAssignment_4_0_1_1(), "rule__Module__MetamodelAssignment_4_0_1_1");
			builder.put(grammarAccess.getModuleAccess().getModuleMandatoryAssignment_4_1_1(), "rule__Module__ModuleMandatoryAssignment_4_1_1");
			builder.put(grammarAccess.getModuleAccess().getModuleMandatoryAssignment_4_1_2_1(), "rule__Module__ModuleMandatoryAssignment_4_1_2_1");
			builder.put(grammarAccess.getModuleAccess().getModuleOptionalAssignment_4_2_1(), "rule__Module__ModuleOptionalAssignment_4_2_1");
			builder.put(grammarAccess.getModuleAccess().getModuleOptionalAssignment_4_2_2_1(), "rule__Module__ModuleOptionalAssignment_4_2_2_1");
			builder.put(grammarAccess.getModuleAccess().getModuleAlternativeAssignment_4_3_1(), "rule__Module__ModuleAlternativeAssignment_4_3_1");
			builder.put(grammarAccess.getModuleAccess().getModuleAlternativeAssignment_4_3_2_1(), "rule__Module__ModuleAlternativeAssignment_4_3_2_1");
			builder.put(grammarAccess.getModuleAccess().getModuleOrAssignment_4_4_1(), "rule__Module__ModuleOrAssignment_4_4_1");
			builder.put(grammarAccess.getModuleAccess().getModuleOrAssignment_4_4_2_1(), "rule__Module__ModuleOrAssignment_4_4_2_1");
			builder.put(grammarAccess.getModuleAccess().getRulesAssignment_4_5_1(), "rule__Module__RulesAssignment_4_5_1");
			builder.put(grammarAccess.getModuleAccess().getChooseDiagramAssignment_4_6_1(), "rule__Module__ChooseDiagramAssignment_4_6_1");
			builder.put(grammarAccess.getRuleSetAccess().getRulefileAssignment_0(), "rule__RuleSet__RulefileAssignment_0");
			builder.put(grammarAccess.getRuleSetAccess().getRulesAssignment_2_0(), "rule__RuleSet__RulesAssignment_2_0");
			builder.put(grammarAccess.getRuleSetAccess().getRulesAssignment_2_1_1(), "rule__RuleSet__RulesAssignment_2_1_1");
			builder.put(grammarAccess.getDiagramAccess().getViewpointFileURIAssignment_0(), "rule__Diagram__ViewpointFileURIAssignment_0");
			builder.put(grammarAccess.getDiagramAccess().getOverridesElementsAssignment_1_1_1(), "rule__Diagram__OverridesElementsAssignment_1_1_1");
			builder.put(grammarAccess.getDiagramAccess().getOverridesElementsAssignment_1_1_2_1(), "rule__Diagram__OverridesElementsAssignment_1_1_2_1");
			builder.put(grammarAccess.getDiagramAccess().getMergeAssignment_1_2_1(), "rule__Diagram__MergeAssignment_1_2_1");
			builder.put(grammarAccess.getDiagramAccess().getMergeAssignment_1_2_2_1(), "rule__Diagram__MergeAssignment_1_2_2_1");
			builder.put(grammarAccess.getElementAccess().getElementIdAssignment_0(), "rule__Element__ElementIdAssignment_0");
			builder.put(grammarAccess.getElementAccess().getFeatureAssignment_1(), "rule__Element__FeatureAssignment_1");
			builder.put(grammarAccess.getElementAccess().getOverModulesAssignment_2_1(), "rule__Element__OverModulesAssignment_2_1");
			builder.put(grammarAccess.getElementAccess().getOverModulesAssignment_2_2_1(), "rule__Element__OverModulesAssignment_2_2_1");
			builder.put(grammarAccess.getFeatureElementAccess().getFeatureIdAssignment_2(), "rule__FeatureElement__FeatureIdAssignment_2");
			builder.put(grammarAccess.getFeatureElementAccess().getFeatureAssignment_3(), "rule__FeatureElement__FeatureAssignment_3");
			builder.put(grammarAccess.getRuleAccess().getNameAssignment_0(), "rule__Rule__NameAssignment_0");
			builder.put(grammarAccess.getRuleAccess().getExtendsruleAssignment_1_1(), "rule__Rule__ExtendsruleAssignment_1_1");
			builder.put(grammarAccess.getFormulaAccess().getTermAssignment(), "rule__Formula__TermAssignment");
			builder.put(grammarAccess.getTermAccess().getNextAssignment_1(), "rule__Term__NextAssignment_1");
			builder.put(grammarAccess.getSimpleAccess().getUoperatorAssignment_0(), "rule__Simple__UoperatorAssignment_0");
			builder.put(grammarAccess.getSimpleAccess().getVariableAssignment_1(), "rule__Simple__VariableAssignment_1");
			builder.put(grammarAccess.getBinaryAccess().getUoperatorAssignment_0(), "rule__Binary__UoperatorAssignment_0");
			builder.put(grammarAccess.getBinaryAccess().getOperand1Assignment_2(), "rule__Binary__Operand1Assignment_2");
			builder.put(grammarAccess.getBinaryAccess().getBoperatorAssignment_3(), "rule__Binary__BoperatorAssignment_3");
			builder.put(grammarAccess.getBinaryAccess().getOperand2Assignment_4(), "rule__Binary__Operand2Assignment_4");
			builder.put(grammarAccess.getNextTermAccess().getBoperatorAssignment_0(), "rule__NextTerm__BoperatorAssignment_0");
			builder.put(grammarAccess.getNextTermAccess().getTermAssignment_1(), "rule__NextTerm__TermAssignment_1");
			builder.put(grammarAccess.getModuleAccess().getUnorderedGroup_4(), "rule__Module__UnorderedGroup_4");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private CaponeDslGrammarAccess grammarAccess;

	@Override
	protected InternalCaponeDslParser createParser() {
		InternalCaponeDslParser result = new InternalCaponeDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public CaponeDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(CaponeDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
