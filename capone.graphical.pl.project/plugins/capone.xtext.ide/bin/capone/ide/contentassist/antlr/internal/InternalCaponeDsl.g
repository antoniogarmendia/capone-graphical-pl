/*
 * generated by Xtext 2.32.0
 */
grammar InternalCaponeDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package capone.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package capone.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import capone.services.CaponeDslGrammarAccess;

}
@parser::members {
	private CaponeDslGrammarAccess grammarAccess;

	public void setGrammarAccess(CaponeDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModule
entryRuleModule
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleAccess().getGroup()); }
		(rule__Module__Group__0)
		{ after(grammarAccess.getModuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleSet
entryRuleRuleSet
:
{ before(grammarAccess.getRuleSetRule()); }
	 ruleRuleSet
{ after(grammarAccess.getRuleSetRule()); } 
	 EOF 
;

// Rule RuleSet
ruleRuleSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleSetAccess().getGroup()); }
		(rule__RuleSet__Group__0)
		{ after(grammarAccess.getRuleSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiagram
entryRuleDiagram
:
{ before(grammarAccess.getDiagramRule()); }
	 ruleDiagram
{ after(grammarAccess.getDiagramRule()); } 
	 EOF 
;

// Rule Diagram
ruleDiagram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiagramAccess().getGroup()); }
		(rule__Diagram__Group__0)
		{ after(grammarAccess.getDiagramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getGroup()); }
		(rule__Element__Group__0)
		{ after(grammarAccess.getElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureElement
entryRuleFeatureElement
:
{ before(grammarAccess.getFeatureElementRule()); }
	 ruleFeatureElement
{ after(grammarAccess.getFeatureElementRule()); } 
	 EOF 
;

// Rule FeatureElement
ruleFeatureElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureElementAccess().getGroup()); }
		(rule__FeatureElement__Group__0)
		{ after(grammarAccess.getFeatureElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormula
entryRuleFormula
:
{ before(grammarAccess.getFormulaRule()); }
	 ruleFormula
{ after(grammarAccess.getFormulaRule()); } 
	 EOF 
;

// Rule Formula
ruleFormula 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormulaAccess().getTermAssignment()); }
		(rule__Formula__TermAssignment)
		{ after(grammarAccess.getFormulaAccess().getTermAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getGroup()); }
		(rule__Term__Group__0)
		{ after(grammarAccess.getTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimple
entryRuleSimple
:
{ before(grammarAccess.getSimpleRule()); }
	 ruleSimple
{ after(grammarAccess.getSimpleRule()); } 
	 EOF 
;

// Rule Simple
ruleSimple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleAccess().getGroup()); }
		(rule__Simple__Group__0)
		{ after(grammarAccess.getSimpleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinary
entryRuleBinary
:
{ before(grammarAccess.getBinaryRule()); }
	 ruleBinary
{ after(grammarAccess.getBinaryRule()); } 
	 EOF 
;

// Rule Binary
ruleBinary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryAccess().getGroup()); }
		(rule__Binary__Group__0)
		{ after(grammarAccess.getBinaryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNextTerm
entryRuleNextTerm
:
{ before(grammarAccess.getNextTermRule()); }
	 ruleNextTerm
{ after(grammarAccess.getNextTermRule()); } 
	 EOF 
;

// Rule NextTerm
ruleNextTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNextTermAccess().getGroup()); }
		(rule__NextTerm__Group__0)
		{ after(grammarAccess.getNextTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule UnaryOperator
ruleUnaryOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getNotEnumLiteralDeclaration()); }
		('not')
		{ after(grammarAccess.getUnaryOperatorAccess().getNotEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BinaryOperator
ruleBinaryOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getAlternatives()); }
		(rule__BinaryOperator__Alternatives)
		{ after(grammarAccess.getBinaryOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getSimpleParserRuleCall_0_0()); }
		ruleSimple
		{ after(grammarAccess.getTermAccess().getSimpleParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getBinaryParserRuleCall_0_1()); }
		ruleBinary
		{ after(grammarAccess.getTermAccess().getBinaryParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getAndEnumLiteralDeclaration_0()); }
		('and')
		{ after(grammarAccess.getBinaryOperatorAccess().getAndEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getOrEnumLiteralDeclaration_1()); }
		('or')
		{ after(grammarAccess.getBinaryOperatorAccess().getOrEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getImpliesEnumLiteralDeclaration_2()); }
		('implies')
		{ after(grammarAccess.getBinaryOperatorAccess().getImpliesEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getIsTopAssignment_0()); }
	(rule__Module__IsTopAssignment_0)?
	{ after(grammarAccess.getModuleAccess().getIsTopAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getModuleKeyword_1()); }
	'Module'
	{ after(grammarAccess.getModuleAccess().getModuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__2__Impl
	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getNameAssignment_2()); }
	(rule__Module__NameAssignment_2)
	{ after(grammarAccess.getModuleAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__3__Impl
	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__4__Impl
	rule__Module__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getUnorderedGroup_4()); }
	(rule__Module__UnorderedGroup_4)
	{ after(grammarAccess.getModuleAccess().getUnorderedGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_0__0__Impl
	rule__Module__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getGroup_4_0_0()); }
	(rule__Module__Group_4_0_0__0)?
	{ after(grammarAccess.getModuleAccess().getGroup_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getGroup_4_0_1()); }
	(rule__Module__Group_4_0_1__0)
	{ after(grammarAccess.getModuleAccess().getGroup_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_0_0__0__Impl
	rule__Module__Group_4_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getFormulaKeyword_4_0_0_0()); }
	'formula'
	{ after(grammarAccess.getModuleAccess().getFormulaKeyword_4_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getFormulaAssignment_4_0_0_1()); }
	(rule__Module__FormulaAssignment_4_0_0_1)
	{ after(grammarAccess.getModuleAccess().getFormulaAssignment_4_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_0_1__0__Impl
	rule__Module__Group_4_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getMetamodelKeyword_4_0_1_0()); }
	'metamodel'
	{ after(grammarAccess.getModuleAccess().getMetamodelKeyword_4_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getMetamodelAssignment_4_0_1_1()); }
	(rule__Module__MetamodelAssignment_4_0_1_1)
	{ after(grammarAccess.getModuleAccess().getMetamodelAssignment_4_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_1__0__Impl
	rule__Module__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getExtendsMandatoryKeyword_4_1_0()); }
	'extends.mandatory'
	{ after(grammarAccess.getModuleAccess().getExtendsMandatoryKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_1__1__Impl
	rule__Module__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getModuleMandatoryAssignment_4_1_1()); }
	(rule__Module__ModuleMandatoryAssignment_4_1_1)
	{ after(grammarAccess.getModuleAccess().getModuleMandatoryAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getGroup_4_1_2()); }
	(rule__Module__Group_4_1_2__0)*
	{ after(grammarAccess.getModuleAccess().getGroup_4_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_1_2__0__Impl
	rule__Module__Group_4_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getCommaKeyword_4_1_2_0()); }
	','
	{ after(grammarAccess.getModuleAccess().getCommaKeyword_4_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getModuleMandatoryAssignment_4_1_2_1()); }
	(rule__Module__ModuleMandatoryAssignment_4_1_2_1)
	{ after(grammarAccess.getModuleAccess().getModuleMandatoryAssignment_4_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_2__0__Impl
	rule__Module__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getExtendsOptionalKeyword_4_2_0()); }
	'extends.optional'
	{ after(grammarAccess.getModuleAccess().getExtendsOptionalKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_2__1__Impl
	rule__Module__Group_4_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getModuleOptionalAssignment_4_2_1()); }
	(rule__Module__ModuleOptionalAssignment_4_2_1)
	{ after(grammarAccess.getModuleAccess().getModuleOptionalAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getGroup_4_2_2()); }
	(rule__Module__Group_4_2_2__0)*
	{ after(grammarAccess.getModuleAccess().getGroup_4_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_2_2__0__Impl
	rule__Module__Group_4_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getCommaKeyword_4_2_2_0()); }
	','
	{ after(grammarAccess.getModuleAccess().getCommaKeyword_4_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getModuleOptionalAssignment_4_2_2_1()); }
	(rule__Module__ModuleOptionalAssignment_4_2_2_1)
	{ after(grammarAccess.getModuleAccess().getModuleOptionalAssignment_4_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_3__0__Impl
	rule__Module__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getExtendsAlternativeKeyword_4_3_0()); }
	'extends.alternative'
	{ after(grammarAccess.getModuleAccess().getExtendsAlternativeKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_3__1__Impl
	rule__Module__Group_4_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getModuleAlternativeAssignment_4_3_1()); }
	(rule__Module__ModuleAlternativeAssignment_4_3_1)
	{ after(grammarAccess.getModuleAccess().getModuleAlternativeAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getGroup_4_3_2()); }
	(rule__Module__Group_4_3_2__0)*
	{ after(grammarAccess.getModuleAccess().getGroup_4_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_3_2__0__Impl
	rule__Module__Group_4_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getCommaKeyword_4_3_2_0()); }
	','
	{ after(grammarAccess.getModuleAccess().getCommaKeyword_4_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getModuleAlternativeAssignment_4_3_2_1()); }
	(rule__Module__ModuleAlternativeAssignment_4_3_2_1)
	{ after(grammarAccess.getModuleAccess().getModuleAlternativeAssignment_4_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_4__0__Impl
	rule__Module__Group_4_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getExtendsOrKeyword_4_4_0()); }
	'extends.or'
	{ after(grammarAccess.getModuleAccess().getExtendsOrKeyword_4_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_4__1__Impl
	rule__Module__Group_4_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getModuleOrAssignment_4_4_1()); }
	(rule__Module__ModuleOrAssignment_4_4_1)
	{ after(grammarAccess.getModuleAccess().getModuleOrAssignment_4_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getGroup_4_4_2()); }
	(rule__Module__Group_4_4_2__0)*
	{ after(grammarAccess.getModuleAccess().getGroup_4_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_4_2__0__Impl
	rule__Module__Group_4_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getCommaKeyword_4_4_2_0()); }
	','
	{ after(grammarAccess.getModuleAccess().getCommaKeyword_4_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getModuleOrAssignment_4_4_2_1()); }
	(rule__Module__ModuleOrAssignment_4_4_2_1)
	{ after(grammarAccess.getModuleAccess().getModuleOrAssignment_4_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_5__0__Impl
	rule__Module__Group_4_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getRulesKeyword_4_5_0()); }
	'rules'
	{ after(grammarAccess.getModuleAccess().getRulesKeyword_4_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getRulesAssignment_4_5_1()); }
	(rule__Module__RulesAssignment_4_5_1)
	{ after(grammarAccess.getModuleAccess().getRulesAssignment_4_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_6__0__Impl
	rule__Module__Group_4_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getDiagramKeyword_4_6_0()); }
	'diagram'
	{ after(grammarAccess.getModuleAccess().getDiagramKeyword_4_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getChooseDiagramAssignment_4_6_1()); }
	(rule__Module__ChooseDiagramAssignment_4_6_1)
	{ after(grammarAccess.getModuleAccess().getChooseDiagramAssignment_4_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__0__Impl
	rule__RuleSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRulefileAssignment_0()); }
	(rule__RuleSet__RulefileAssignment_0)
	{ after(grammarAccess.getRuleSetAccess().getRulefileAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__1__Impl
	rule__RuleSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getRuleSetAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__2__Impl
	rule__RuleSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getGroup_2()); }
	(rule__RuleSet__Group_2__0)?
	{ after(grammarAccess.getRuleSetAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getRuleSetAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group_2__0__Impl
	rule__RuleSet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRulesAssignment_2_0()); }
	(rule__RuleSet__RulesAssignment_2_0)
	{ after(grammarAccess.getRuleSetAccess().getRulesAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getGroup_2_1()); }
	(rule__RuleSet__Group_2_1__0)*
	{ after(grammarAccess.getRuleSetAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group_2_1__0__Impl
	rule__RuleSet__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getRuleSetAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRulesAssignment_2_1_1()); }
	(rule__RuleSet__RulesAssignment_2_1_1)
	{ after(grammarAccess.getRuleSetAccess().getRulesAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group__0__Impl
	rule__Diagram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getViewpointFileURIAssignment_0()); }
	(rule__Diagram__ViewpointFileURIAssignment_0)
	{ after(grammarAccess.getDiagramAccess().getViewpointFileURIAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getGroup_1()); }
	(rule__Diagram__Group_1__0)?
	{ after(grammarAccess.getDiagramAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group_1__0__Impl
	rule__Diagram__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getDiagramAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group_1__1__Impl
	rule__Diagram__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getGroup_1_1()); }
	(rule__Diagram__Group_1_1__0)?
	{ after(grammarAccess.getDiagramAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group_1__2__Impl
	rule__Diagram__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getGroup_1_2()); }
	(rule__Diagram__Group_1_2__0)?
	{ after(grammarAccess.getDiagramAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getRightCurlyBracketKeyword_1_3()); }
	'}'
	{ after(grammarAccess.getDiagramAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group_1_1__0__Impl
	rule__Diagram__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getOverrideKeyword_1_1_0()); }
	'override'
	{ after(grammarAccess.getDiagramAccess().getOverrideKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group_1_1__1__Impl
	rule__Diagram__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getOverridesElementsAssignment_1_1_1()); }
	(rule__Diagram__OverridesElementsAssignment_1_1_1)
	{ after(grammarAccess.getDiagramAccess().getOverridesElementsAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getGroup_1_1_2()); }
	(rule__Diagram__Group_1_1_2__0)*
	{ after(grammarAccess.getDiagramAccess().getGroup_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group_1_1_2__0__Impl
	rule__Diagram__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getCommaKeyword_1_1_2_0()); }
	','
	{ after(grammarAccess.getDiagramAccess().getCommaKeyword_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getOverridesElementsAssignment_1_1_2_1()); }
	(rule__Diagram__OverridesElementsAssignment_1_1_2_1)
	{ after(grammarAccess.getDiagramAccess().getOverridesElementsAssignment_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group_1_2__0__Impl
	rule__Diagram__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getMergeKeyword_1_2_0()); }
	'merge'
	{ after(grammarAccess.getDiagramAccess().getMergeKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group_1_2__1__Impl
	rule__Diagram__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getMergeAssignment_1_2_1()); }
	(rule__Diagram__MergeAssignment_1_2_1)
	{ after(grammarAccess.getDiagramAccess().getMergeAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getGroup_1_2_2()); }
	(rule__Diagram__Group_1_2_2__0)*
	{ after(grammarAccess.getDiagramAccess().getGroup_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group_1_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group_1_2_2__0__Impl
	rule__Diagram__Group_1_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getCommaKeyword_1_2_2_0()); }
	','
	{ after(grammarAccess.getDiagramAccess().getCommaKeyword_1_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group_1_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group_1_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getMergeAssignment_1_2_2_1()); }
	(rule__Diagram__MergeAssignment_1_2_2_1)
	{ after(grammarAccess.getDiagramAccess().getMergeAssignment_1_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__0__Impl
	rule__Element__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getElementIdAssignment_0()); }
	(rule__Element__ElementIdAssignment_0)
	{ after(grammarAccess.getElementAccess().getElementIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__1__Impl
	rule__Element__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getFeatureAssignment_1()); }
	(rule__Element__FeatureAssignment_1)?
	{ after(grammarAccess.getElementAccess().getFeatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getGroup_2()); }
	(rule__Element__Group_2__0)?
	{ after(grammarAccess.getElementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__0__Impl
	rule__Element__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getElementAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__1__Impl
	rule__Element__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getOverModulesAssignment_2_1()); }
	(rule__Element__OverModulesAssignment_2_1)
	{ after(grammarAccess.getElementAccess().getOverModulesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__2__Impl
	rule__Element__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getGroup_2_2()); }
	(rule__Element__Group_2_2__0)*
	{ after(grammarAccess.getElementAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getElementAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2_2__0__Impl
	rule__Element__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getElementAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getOverModulesAssignment_2_2_1()); }
	(rule__Element__OverModulesAssignment_2_2_1)
	{ after(grammarAccess.getElementAccess().getOverModulesAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureElement__Group__0__Impl
	rule__FeatureElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureElementAccess().getFeatureElementAction_0()); }
	()
	{ after(grammarAccess.getFeatureElementAccess().getFeatureElementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureElement__Group__1__Impl
	rule__FeatureElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureElementAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getFeatureElementAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureElement__Group__2__Impl
	rule__FeatureElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureElementAccess().getFeatureIdAssignment_2()); }
	(rule__FeatureElement__FeatureIdAssignment_2)
	{ after(grammarAccess.getFeatureElementAccess().getFeatureIdAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureElement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureElement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureElement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureElementAccess().getFeatureAssignment_3()); }
	(rule__FeatureElement__FeatureAssignment_3)?
	{ after(grammarAccess.getFeatureElementAccess().getFeatureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getNameAssignment_0()); }
	(rule__Rule__NameAssignment_0)
	{ after(grammarAccess.getRuleAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_1()); }
	(rule__Rule__Group_1__0)?
	{ after(grammarAccess.getRuleAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_1__0__Impl
	rule__Rule__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getExtendsKeyword_1_0()); }
	'extends'
	{ after(grammarAccess.getRuleAccess().getExtendsKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getExtendsruleAssignment_1_1()); }
	(rule__Rule__ExtendsruleAssignment_1_1)
	{ after(grammarAccess.getRuleAccess().getExtendsruleAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
	rule__QualifiedName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getAlternatives_0()); }
	(rule__Term__Alternatives_0)
	{ after(grammarAccess.getTermAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getNextAssignment_1()); }
	(rule__Term__NextAssignment_1)?
	{ after(grammarAccess.getTermAccess().getNextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Simple__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simple__Group__0__Impl
	rule__Simple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleAccess().getUoperatorAssignment_0()); }
	(rule__Simple__UoperatorAssignment_0)?
	{ after(grammarAccess.getSimpleAccess().getUoperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simple__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleAccess().getVariableAssignment_1()); }
	(rule__Simple__VariableAssignment_1)
	{ after(grammarAccess.getSimpleAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group__0__Impl
	rule__Binary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getUoperatorAssignment_0()); }
	(rule__Binary__UoperatorAssignment_0)?
	{ after(grammarAccess.getBinaryAccess().getUoperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group__1__Impl
	rule__Binary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBinaryAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group__2__Impl
	rule__Binary__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getOperand1Assignment_2()); }
	(rule__Binary__Operand1Assignment_2)
	{ after(grammarAccess.getBinaryAccess().getOperand1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group__3__Impl
	rule__Binary__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getBoperatorAssignment_3()); }
	(rule__Binary__BoperatorAssignment_3)
	{ after(grammarAccess.getBinaryAccess().getBoperatorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group__4__Impl
	rule__Binary__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getOperand2Assignment_4()); }
	(rule__Binary__Operand2Assignment_4)
	{ after(grammarAccess.getBinaryAccess().getOperand2Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getBinaryAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NextTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NextTerm__Group__0__Impl
	rule__NextTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NextTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextTermAccess().getBoperatorAssignment_0()); }
	(rule__NextTerm__BoperatorAssignment_0)
	{ after(grammarAccess.getNextTermAccess().getBoperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NextTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NextTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NextTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextTermAccess().getTermAssignment_1()); }
	(rule__NextTerm__TermAssignment_1)
	{ after(grammarAccess.getNextTermAccess().getTermAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__UnorderedGroup_4
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getModuleAccess().getUnorderedGroup_4());
	}
:
	rule__Module__UnorderedGroup_4__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getModuleAccess().getUnorderedGroup_4())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getModuleAccess().getUnorderedGroup_4());
	restoreStackSize(stackSize);
}

rule__Module__UnorderedGroup_4__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModuleAccess().getUnorderedGroup_4(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModuleAccess().getUnorderedGroup_4(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModuleAccess().getGroup_4_0()); }
					(rule__Module__Group_4_0__0)
					{ after(grammarAccess.getModuleAccess().getGroup_4_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModuleAccess().getUnorderedGroup_4(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModuleAccess().getUnorderedGroup_4(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModuleAccess().getGroup_4_1()); }
					(rule__Module__Group_4_1__0)
					{ after(grammarAccess.getModuleAccess().getGroup_4_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModuleAccess().getUnorderedGroup_4(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModuleAccess().getUnorderedGroup_4(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModuleAccess().getGroup_4_2()); }
					(rule__Module__Group_4_2__0)
					{ after(grammarAccess.getModuleAccess().getGroup_4_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModuleAccess().getUnorderedGroup_4(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModuleAccess().getUnorderedGroup_4(), 3);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModuleAccess().getGroup_4_3()); }
					(rule__Module__Group_4_3__0)
					{ after(grammarAccess.getModuleAccess().getGroup_4_3()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModuleAccess().getUnorderedGroup_4(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModuleAccess().getUnorderedGroup_4(), 4);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModuleAccess().getGroup_4_4()); }
					(rule__Module__Group_4_4__0)
					{ after(grammarAccess.getModuleAccess().getGroup_4_4()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModuleAccess().getUnorderedGroup_4(), 5)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModuleAccess().getUnorderedGroup_4(), 5);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModuleAccess().getGroup_4_5()); }
					(rule__Module__Group_4_5__0)
					{ after(grammarAccess.getModuleAccess().getGroup_4_5()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModuleAccess().getUnorderedGroup_4(), 6)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModuleAccess().getUnorderedGroup_4(), 6);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModuleAccess().getGroup_4_6()); }
					(rule__Module__Group_4_6__0)
					{ after(grammarAccess.getModuleAccess().getGroup_4_6()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModuleAccess().getUnorderedGroup_4());
	restoreStackSize(stackSize);
}

rule__Module__UnorderedGroup_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__UnorderedGroup_4__Impl
	rule__Module__UnorderedGroup_4__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__UnorderedGroup_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__UnorderedGroup_4__Impl
	rule__Module__UnorderedGroup_4__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__UnorderedGroup_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__UnorderedGroup_4__Impl
	rule__Module__UnorderedGroup_4__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__UnorderedGroup_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__UnorderedGroup_4__Impl
	rule__Module__UnorderedGroup_4__4?
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__UnorderedGroup_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__UnorderedGroup_4__Impl
	rule__Module__UnorderedGroup_4__5?
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__UnorderedGroup_4__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__UnorderedGroup_4__Impl
	rule__Module__UnorderedGroup_4__6?
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__UnorderedGroup_4__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__UnorderedGroup_4__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__IsTopAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getIsTopTopKeyword_0_0()); }
		(
			{ before(grammarAccess.getModuleAccess().getIsTopTopKeyword_0_0()); }
			'top'
			{ after(grammarAccess.getModuleAccess().getIsTopTopKeyword_0_0()); }
		)
		{ after(grammarAccess.getModuleAccess().getIsTopTopKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getModuleAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__FormulaAssignment_4_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getFormulaFormulaParserRuleCall_4_0_0_1_0()); }
		ruleFormula
		{ after(grammarAccess.getModuleAccess().getFormulaFormulaParserRuleCall_4_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__MetamodelAssignment_4_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getMetamodelEStringParserRuleCall_4_0_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getModuleAccess().getMetamodelEStringParserRuleCall_4_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ModuleMandatoryAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getModuleMandatoryModuleCrossReference_4_1_1_0()); }
		(
			{ before(grammarAccess.getModuleAccess().getModuleMandatoryModuleEStringParserRuleCall_4_1_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getModuleAccess().getModuleMandatoryModuleEStringParserRuleCall_4_1_1_0_1()); }
		)
		{ after(grammarAccess.getModuleAccess().getModuleMandatoryModuleCrossReference_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ModuleMandatoryAssignment_4_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getModuleMandatoryModuleCrossReference_4_1_2_1_0()); }
		(
			{ before(grammarAccess.getModuleAccess().getModuleMandatoryModuleEStringParserRuleCall_4_1_2_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getModuleAccess().getModuleMandatoryModuleEStringParserRuleCall_4_1_2_1_0_1()); }
		)
		{ after(grammarAccess.getModuleAccess().getModuleMandatoryModuleCrossReference_4_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ModuleOptionalAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getModuleOptionalModuleCrossReference_4_2_1_0()); }
		(
			{ before(grammarAccess.getModuleAccess().getModuleOptionalModuleEStringParserRuleCall_4_2_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getModuleAccess().getModuleOptionalModuleEStringParserRuleCall_4_2_1_0_1()); }
		)
		{ after(grammarAccess.getModuleAccess().getModuleOptionalModuleCrossReference_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ModuleOptionalAssignment_4_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getModuleOptionalModuleCrossReference_4_2_2_1_0()); }
		(
			{ before(grammarAccess.getModuleAccess().getModuleOptionalModuleEStringParserRuleCall_4_2_2_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getModuleAccess().getModuleOptionalModuleEStringParserRuleCall_4_2_2_1_0_1()); }
		)
		{ after(grammarAccess.getModuleAccess().getModuleOptionalModuleCrossReference_4_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ModuleAlternativeAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getModuleAlternativeModuleCrossReference_4_3_1_0()); }
		(
			{ before(grammarAccess.getModuleAccess().getModuleAlternativeModuleEStringParserRuleCall_4_3_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getModuleAccess().getModuleAlternativeModuleEStringParserRuleCall_4_3_1_0_1()); }
		)
		{ after(grammarAccess.getModuleAccess().getModuleAlternativeModuleCrossReference_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ModuleAlternativeAssignment_4_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getModuleAlternativeModuleCrossReference_4_3_2_1_0()); }
		(
			{ before(grammarAccess.getModuleAccess().getModuleAlternativeModuleEStringParserRuleCall_4_3_2_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getModuleAccess().getModuleAlternativeModuleEStringParserRuleCall_4_3_2_1_0_1()); }
		)
		{ after(grammarAccess.getModuleAccess().getModuleAlternativeModuleCrossReference_4_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ModuleOrAssignment_4_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getModuleOrModuleCrossReference_4_4_1_0()); }
		(
			{ before(grammarAccess.getModuleAccess().getModuleOrModuleEStringParserRuleCall_4_4_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getModuleAccess().getModuleOrModuleEStringParserRuleCall_4_4_1_0_1()); }
		)
		{ after(grammarAccess.getModuleAccess().getModuleOrModuleCrossReference_4_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ModuleOrAssignment_4_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getModuleOrModuleCrossReference_4_4_2_1_0()); }
		(
			{ before(grammarAccess.getModuleAccess().getModuleOrModuleEStringParserRuleCall_4_4_2_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getModuleAccess().getModuleOrModuleEStringParserRuleCall_4_4_2_1_0_1()); }
		)
		{ after(grammarAccess.getModuleAccess().getModuleOrModuleCrossReference_4_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__RulesAssignment_4_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getRulesRuleSetParserRuleCall_4_5_1_0()); }
		ruleRuleSet
		{ after(grammarAccess.getModuleAccess().getRulesRuleSetParserRuleCall_4_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ChooseDiagramAssignment_4_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getChooseDiagramDiagramParserRuleCall_4_6_1_0()); }
		ruleDiagram
		{ after(grammarAccess.getModuleAccess().getChooseDiagramDiagramParserRuleCall_4_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__RulefileAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSetAccess().getRulefileEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getRuleSetAccess().getRulefileEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__RulesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSetAccess().getRulesRuleParserRuleCall_2_0_0()); }
		ruleRule
		{ after(grammarAccess.getRuleSetAccess().getRulesRuleParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__RulesAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSetAccess().getRulesRuleParserRuleCall_2_1_1_0()); }
		ruleRule
		{ after(grammarAccess.getRuleSetAccess().getRulesRuleParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__ViewpointFileURIAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiagramAccess().getViewpointFileURIEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getDiagramAccess().getViewpointFileURIEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__OverridesElementsAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiagramAccess().getOverridesElementsElementParserRuleCall_1_1_1_0()); }
		ruleElement
		{ after(grammarAccess.getDiagramAccess().getOverridesElementsElementParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__OverridesElementsAssignment_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiagramAccess().getOverridesElementsElementParserRuleCall_1_1_2_1_0()); }
		ruleElement
		{ after(grammarAccess.getDiagramAccess().getOverridesElementsElementParserRuleCall_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__MergeAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiagramAccess().getMergeElementParserRuleCall_1_2_1_0()); }
		ruleElement
		{ after(grammarAccess.getDiagramAccess().getMergeElementParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__MergeAssignment_1_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiagramAccess().getMergeElementParserRuleCall_1_2_2_1_0()); }
		ruleElement
		{ after(grammarAccess.getDiagramAccess().getMergeElementParserRuleCall_1_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__ElementIdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getElementIdEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getElementAccess().getElementIdEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__FeatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getFeatureFeatureElementParserRuleCall_1_0()); }
		ruleFeatureElement
		{ after(grammarAccess.getElementAccess().getFeatureFeatureElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__OverModulesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getOverModulesModuleCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getElementAccess().getOverModulesModuleEStringParserRuleCall_2_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getElementAccess().getOverModulesModuleEStringParserRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getElementAccess().getOverModulesModuleCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__OverModulesAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getOverModulesModuleCrossReference_2_2_1_0()); }
		(
			{ before(grammarAccess.getElementAccess().getOverModulesModuleEStringParserRuleCall_2_2_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getElementAccess().getOverModulesModuleEStringParserRuleCall_2_2_1_0_1()); }
		)
		{ after(grammarAccess.getElementAccess().getOverModulesModuleCrossReference_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureElement__FeatureIdAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureElementAccess().getFeatureIdEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getFeatureElementAccess().getFeatureIdEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureElement__FeatureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureElementAccess().getFeatureFeatureElementParserRuleCall_3_0()); }
		ruleFeatureElement
		{ after(grammarAccess.getFeatureElementAccess().getFeatureFeatureElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getRuleAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ExtendsruleAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getExtendsruleRuleCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getRuleAccess().getExtendsruleRuleQualifiedNameParserRuleCall_1_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRuleAccess().getExtendsruleRuleQualifiedNameParserRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getRuleAccess().getExtendsruleRuleCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__TermAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormulaAccess().getTermTermParserRuleCall_0()); }
		ruleTerm
		{ after(grammarAccess.getFormulaAccess().getTermTermParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__NextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getNextNextTermParserRuleCall_1_0()); }
		ruleNextTerm
		{ after(grammarAccess.getTermAccess().getNextNextTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple__UoperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleAccess().getUoperatorUnaryOperatorEnumRuleCall_0_0()); }
		ruleUnaryOperator
		{ after(grammarAccess.getSimpleAccess().getUoperatorUnaryOperatorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleAccess().getVariableModuleCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSimpleAccess().getVariableModuleEStringParserRuleCall_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getSimpleAccess().getVariableModuleEStringParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSimpleAccess().getVariableModuleCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__UoperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryAccess().getUoperatorUnaryOperatorEnumRuleCall_0_0()); }
		ruleUnaryOperator
		{ after(grammarAccess.getBinaryAccess().getUoperatorUnaryOperatorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Operand1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryAccess().getOperand1SimpleParserRuleCall_2_0()); }
		ruleSimple
		{ after(grammarAccess.getBinaryAccess().getOperand1SimpleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__BoperatorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryAccess().getBoperatorBinaryOperatorEnumRuleCall_3_0()); }
		ruleBinaryOperator
		{ after(grammarAccess.getBinaryAccess().getBoperatorBinaryOperatorEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Operand2Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryAccess().getOperand2TermParserRuleCall_4_0()); }
		ruleTerm
		{ after(grammarAccess.getBinaryAccess().getOperand2TermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NextTerm__BoperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNextTermAccess().getBoperatorBinaryOperatorEnumRuleCall_0_0()); }
		ruleBinaryOperator
		{ after(grammarAccess.getNextTermAccess().getBoperatorBinaryOperatorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NextTerm__TermAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNextTermAccess().getTermTermParserRuleCall_1_0()); }
		ruleTerm
		{ after(grammarAccess.getNextTermAccess().getTermTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
