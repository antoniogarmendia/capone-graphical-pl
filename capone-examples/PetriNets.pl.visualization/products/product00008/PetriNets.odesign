<?xml version="1.0" encoding="ASCII"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="PetriNets" version="12.0.0.2017041100">
  <ownedViewpoints name="PetriNetsViewpoint">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="PetriNetsDiagram" domainClass="PetriNetsPL::PetriNet" enablePopupBars="true">
      <metamodel href="PetriNets.ecore#/"/>
      <defaultLayer name="Default">
        <nodeMappings name="PlaceNode" semanticCandidatesExpression="feature:places" domainClass="PetriNetsPL::Place">
          <borderedNodeMappings name="LabelPlaceNode" semanticCandidatesExpression="aql:self" domainClass="PetriNetsPL::Place">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:'P'.concat(self.eContainer().places->indexOf(self).toString())" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/PetriNets.pl.visualization/icons/transparent.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </borderedNodeMappings>
          <style xsi:type="style:BundledImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.tokens->size().toString()" labelPosition="node" resizeKind="NSEW" shape="dot">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.tokens->size() = 0">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:' '" labelPosition="node" resizeKind="NSEW" workspacePath="/PetriNets.pl.visualization/icons/no-token.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.tokens->size() = 1">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:' '" labelPosition="node" resizeKind="NSEW" workspacePath="/PetriNets.pl.visualization/icons/one-token.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.tokens->size() = 2">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:' '" labelPosition="node" resizeKind="NSEW" workspacePath="/PetriNets.pl.visualization/icons/two-token.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.tokens->size() = 3">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:' '" labelPosition="node" resizeKind="NSEW" workspacePath="/PetriNets.pl.visualization/icons/three-token.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.tokens->size() = 4">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:' '" labelPosition="node" resizeKind="NSEW" workspacePath="/PetriNets.pl.visualization/icons/four-token.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <nodeMappings name="TransitionNode" semanticCandidatesExpression="feature:transitions" domainClass="PetriNetsPL::Transition">
          <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:'T'.concat(self.eContainer().transitions->indexOf(self).toString())" resizeKind="NSEW" width="2" height="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="PlaceToTransition" sourceMapping="//@ownedViewpoints[name='PetriNetsViewpoint']/@ownedRepresentations[name='PetriNetsDiagram']/@defaultLayer/@nodeMappings[name='TransitionNode']" targetMapping="//@ownedViewpoints[name='PetriNetsViewpoint']/@ownedRepresentations[name='PetriNetsDiagram']/@defaultLayer/@nodeMappings[name='PlaceNode']" targetFinderExpression="aql:self.inPlaces">
          <style sourceArrow="InputArrow" targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="TransitionToPlace" sourceMapping="//@ownedViewpoints[name='PetriNetsViewpoint']/@ownedRepresentations[name='PetriNetsDiagram']/@defaultLayer/@nodeMappings[name='TransitionNode']" targetMapping="//@ownedViewpoints[name='PetriNetsViewpoint']/@ownedRepresentations[name='PetriNetsDiagram']/@defaultLayer/@nodeMappings[name='PlaceNode']" targetFinderExpression="aql:self.outPlaces">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <toolSections name="PetriNetsSection">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="PlaceCreation" nodeMappings="//@ownedViewpoints[name='PetriNetsViewpoint']/@ownedRepresentations[name='PetriNetsDiagram']/@defaultLayer/@nodeMappings[name='PlaceNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="PetriNetsPL::Place" referenceName="places"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="TransitionCreation" nodeMappings="//@ownedViewpoints[name='PetriNetsViewpoint']/@ownedRepresentations[name='PetriNetsDiagram']/@defaultLayer/@nodeMappings[name='TransitionNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="PetriNetsPL::Transition" referenceName="transitions"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="PlaceToTransitionCreation" edgeMappings="//@ownedViewpoints[name='PetriNetsViewpoint']/@ownedRepresentations[name='PetriNetsDiagram']/@defaultLayer/@edgeMappings[name='PlaceToTransition']" extraSourceMappings="//@ownedViewpoints[name='PetriNetsViewpoint']/@ownedRepresentations[name='PetriNetsDiagram']/@defaultLayer/@nodeMappings[name='PlaceNode']" extraTargetMappings="//@ownedViewpoints[name='PetriNetsViewpoint']/@ownedRepresentations[name='PetriNetsDiagram']/@defaultLayer/@nodeMappings[name='TransitionNode']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:self.oclIsTypeOf(PetriNetsPL::Place)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="inPlaces" valueExpression="var:source"/>
                  </subModelOperations>
                </cases>
                <cases conditionExpression="aql:self.oclIsTypeOf(PetriNetsPL::Transition)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="inPlaces" valueExpression="var:target"/>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="TransitionToPlaceCreation" edgeMappings="//@ownedViewpoints[name='PetriNetsViewpoint']/@ownedRepresentations[name='PetriNetsDiagram']/@defaultLayer/@edgeMappings[name='TransitionToPlace']" extraSourceMappings="//@ownedViewpoints[name='PetriNetsViewpoint']/@ownedRepresentations[name='PetriNetsDiagram']/@defaultLayer/@nodeMappings[name='PlaceNode']" extraTargetMappings="//@ownedViewpoints[name='PetriNetsViewpoint']/@ownedRepresentations[name='PetriNetsDiagram']/@defaultLayer/@nodeMappings[name='TransitionNode']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:self.oclIsTypeOf(PetriNetsPL::Place)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="outPlaces" valueExpression="var:source"/>
                  </subModelOperations>
                </cases>
                <cases conditionExpression="aql:self.oclIsTypeOf(PetriNetsPL::Transition)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="outPlaces" valueExpression="var:target"/>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ToolDescription" name="TokenCreation">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="PetriNetsPL::Token" referenceName="tokens"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
  </ownedViewpoints>
</description:Group>
